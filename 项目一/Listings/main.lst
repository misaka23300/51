C51 COMPILER V9.60.7.0   MAIN                                                              03/08/2025 16:42:23 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          #define KEY_TIME 15
   4          #define TEMP_TIME 1000
   5          
   6          extern uchar led_value[8];
   7          bit key_flag;
   8          
   9          // 0 -> high, 1 -> low
  10          bit show_state, temperature_flag;
  11          
  12          uchar state;
  13          uchar temp_value[3] = {0, 0, 0};
  14          
  15          char adjust;
  16          char adjust_value[3] = {0, 0, 0};
  17          
  18          char argument = 26;
  19          char argument_value[3] = {0, 0, 0};
  20          
  21          /* 
  22          press -> adjust -> adjust_value -> seg
  23          */
  24          void main()
  25          {
  26   1          boot_init();
  27   1          read_temperature();
  28   1      
  29   1          while (1)
  30   1          {
  31   2              if (key_flag)
  32   2              {
  33   3                  key_flag = 0;
  34   3                  key_proc();
  35   3              }
  36   2      
  37   2              if (temperature_flag)
  38   2              {
  39   3                  temperature_flag = 0;
  40   3                  temperature_proc();
  41   3              }
  42   2      
  43   2              state_machine();
  44   2          }
  45   1      }
  46          
  47          void timer_1() interrupt 3
  48          {
  49   1          static uint i;
  50   1          i = (i + 1) % 30000;
  51   1      
  52   1          seg_display();
  53   1          led_display();
  54   1      
C51 COMPILER V9.60.7.0   MAIN                                                              03/08/2025 16:42:23 PAGE 2   

  55   1          if (i % KEY_TIME == 0)
  56   1          {
  57   2              key_flag = 1;
  58   2          }
  59   1      
  60   1          if (i % TEMP_TIME == 0)
  61   1          {
  62   2              temperature_flag = 1;
  63   2          }
  64   1      }
  65          
  66          void key_proc()
  67          {   
  68   1          uchar press;
  69   1          press = key_scan();
  70   1      
  71   1          switch (press)
  72   1          {
  73   2              case 4:
  74   2              {
  75   3                  state = (state + 1) % 3;
  76   3                  s4_state(state);
  77   3              }
  78   2              break;
  79   2      
  80   2              case 5:
  81   2              {
  82   3                  show_state = ~show_state;
  83   3      
  84   3                  led_value[3] = show_state;
  85   3                  led_value[4] = ~show_state;
  86   3              }
  87   2              break;
  88   2      
  89   2              case 8:
  90   2              {
  91   3                  if (state == 1)
  92   3                  {
  93   4                      adjust = (adjust + 1) % 100;
  94   4                      adjust_proc();
  95   4                  }
  96   3                  else if (state == 2)
  97   3                  {
  98   4                      argument = (argument + 1) % 100;
  99   4                      argument_proc();
 100   4                  }
 101   3              }
 102   2              break;
 103   2      
 104   2              case 9:
 105   2              {
 106   3                  if (state == 1)
 107   3                  {
 108   4                      adjust--;
 109   4                      if (adjust == -99)
 110   4                          adjust = 0;
 111   4                  }
 112   3                  else if (state == 2)
 113   3                  {
 114   4                      argument--;
 115   4                      if (argument == -99)
 116   4                          argument = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              03/08/2025 16:42:23 PAGE 3   

 117   4                  }
 118   3              }
 119   2              break;
 120   2          }
 121   1      }
 122          
 123          void state_machine()
 124          {
 125   1          // 数码管显示
 126   1          
 127   1          switch (state)
 128   1          {
 129   2              case 0:
 130   2              {
 131   3                  //C x x x x T T T
 132   3                  set_seg(12, 16, 16, 16, 16, temp_value[2], temp_value[1] + 32, temp_value[0]);
 133   3              }
 134   2              break;
 135   2      
 136   2              case 1:
 137   2              {
 138   3                  // 需要显示负数
 139   3                  set_seg(14, 16, 16, 16, 16, adjust_value[2], adjust_value[1], adjust_value[0]);
 140   3              }
 141   2              break;
 142   2      
 143   2              case 2:
 144   2              {
 145   3                  set_seg(21, 16, 16, 16, 16, argument_value[2], argument_value[1], argument_value[0]);
 146   3              }
 147   2              break;
 148   2          }
 149   1      }
 150          
 151          void temperature_proc()
 152          {
 153   1          // 获取温度并转换为全局变量的数组
 154   1          //uchar i;
 155   1          int temperature;
 156   1          uchar temp_check;
 157   1          temperature = (int) (read_temperature() * 100);
 158   1      
 159   1          
 160   1          temp_check = (uchar)(temperature / 100) + adjust;
 161   1          if (show_state)
 162   1          {
 163   2              if (temp_check > adjust)
 164   2              {
 165   3                  led_value[7] = 1; 
 166   3              }
 167   2              else
 168   2              {
 169   3                  led_value[7] = 0;
 170   3              }
 171   2          }
 172   1          else
 173   1          {
 174   2              if (temp_check < adjust)
 175   2              {
 176   3                  led_value[7] = 1; 
 177   3              }
 178   2              else
C51 COMPILER V9.60.7.0   MAIN                                                              03/08/2025 16:42:23 PAGE 4   

 179   2              {
 180   3                  led_value[7] = 0;
 181   3              }
 182   2          }
 183   1          
 184   1          temperature = temperature + adjust;
 185   1          temp_value[0] = (uchar) (temperature / 1000 % 10);
 186   1          temp_value[1] = (uchar) (temperature / 100 % 10);
 187   1          temp_value[2] = (uchar) (temperature / 10 % 10) ;
 188   1      
 189   1          delete_0(temp_value, 3);
 190   1      }
 191          
 192          void adjust_proc()
 193          {
 194   1          hex_to_seg(adjust_value, adjust);
 195   1      }
 196          
 197          void argument_proc()
 198          {
 199   1          hex_to_seg(argument_value, argument);
 200   1      }
 201          
 202          void hex_to_seg(char *output, char input)
 203          {
 204   1          if (input < 0)
 205   1          {
 206   2              input = -input;
 207   2              output[1] = input % 10;
 208   2              output[0] = input / 10 % 10;
 209   2      
 210   2              // 删0加负号
 211   2              if (output[1] == 0)
 212   2              {
 213   3                  output[1] = 17;
 214   3              }
 215   2              else
 216   2                  output[2] = 17;
 217   2              
 218   2          }
 219   1          else
 220   1          {
 221   2              output[1] = input % 10;
 222   2              output[0] = input / 10 % 10;
 223   2      
 224   2              delete_0(output, 2);
 225   2          }
 226   1      }
 227          
 228          void delete_0(uchar* arrays, uchar j)
 229          {
 230   1          uchar i;
 231   1          for (i = 0;i < (j - 1); i++)
 232   1          {
 233   2              if (arrays[i] == 0)
 234   2              {
 235   3                  arrays[i] = 16;
 236   3              }
 237   2              else
 238   2                  break;
 239   2          }
 240   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              03/08/2025 16:42:23 PAGE 5   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    811    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
