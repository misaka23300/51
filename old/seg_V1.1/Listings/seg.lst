C51 COMPILER V9.60.7.0   SEG                                                               01/20/2025 19:10:22 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SEG
OBJECT MODULE PLACED IN .\Objects\seg.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE seg.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\seg.l
                    -st) TABS(2) OBJECT(.\Objects\seg.obj)

line level    source

   1          #include "seg.h"
   2          
   3          const uchar letter[] = {                       
   4          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
   5              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
   6          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
   7              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
   8              0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};
   9          
  10          // 定义 seg_array 变量
  11          uchar seg_array[8] = {0, 0, 0, 0, 0, 0, 0, 0};
  12          
  13          void seg_display()
  14          {
  15   1          static uchar i;
  16   1      
  17   1          P0 = ~0x00;
  18   1          batch(6);
  19   1          batch(0);
  20   1      
  21   1          P0 = ~letter[seg_array[i]];
  22   1          batch(7);
  23   1          batch(0);
  24   1      
  25   1          P0 = 0x01 << i;
  26   1          batch(6);
  27   1          batch(0);
  28   1      
  29   1          i = (i + 1) % 8;
  30   1      }
  31          
  32          // 定义 clock_array 变量
  33          uchar clock_array[3] = {23, 59, 1};    // hour, minute, second
  34          
  35          uchar seg_clock()
  36          {
  37   1          clock_array[2]++;
  38   1      
  39   1          
  40   1          if (clock_array[2] == 60)
  41   1          {
  42   2              clock_array[2] = 0;
  43   2              clock_array[1]++;
  44   2      
  45   2              if (clock_array[1] == 60)
  46   2              {
  47   3                  clock_array[1] = 0;
  48   3                  clock_array[0]++;
  49   3                  if (clock_array[0] == 24)
  50   3                  {
  51   4                      clock_array[0] = 0;
  52   4                  }
  53   3              }
  54   2          }
C51 COMPILER V9.60.7.0   SEG                                                               01/20/2025 19:10:22 PAGE 2   

  55   1      
  56   1          seg_array[7] = clock_array[2] % 10;
  57   1          seg_array[6] = clock_array[2] / 10;
  58   1      
  59   1          seg_array[5] = 17;
  60   1          seg_array[4] = clock_array[1] % 10;
  61   1      
  62   1          seg_array[3] = clock_array[1] / 10;
  63   1          seg_array[2] = 17;
  64   1      
  65   1          seg_array[1] = clock_array[0] % 10;
  66   1          seg_array[0] = clock_array[0] / 10;
  67   1      
  68   1          if (clock_array[2] % 5 == 0)
  69   1          {
  70   2              return 1;
  71   2          }
  72   1          else
  73   1          {
  74   2              return 0;
  75   2          }
  76   1      
  77   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    172    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     55    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
