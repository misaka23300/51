C51 COMPILER V9.60.7.0   SEG                                                               03/09/2025 15:19:51 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SEG
OBJECT MODULE PLACED IN .\Objects\seg.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE seg.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\seg.l
                    -st) TABS(2) OBJECT(.\Objects\seg.obj)

line level    source

   1          #include "seg.h"
   2          
   3          const uchar letter[] = {                       
   4          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
   5              0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
   6          //black  -     H    J    K    L    N    o   P    U     t    G    Q    r   M    y
   7              0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
   8              0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};
   9          
  10          // 定义 seg_array 变量
  11          uchar seg[8] = {0, 0, 0, 0, 0, 0, 0, 0};
  12          uchar point[8] = {0, 0, 0, 0, 0, 0, 0, 0};
  13          
  14          void seg_display()
  15          {
  16   1          static uchar i;
  17   1      
  18   1          P0 = ~0x00;
  19   1          batch(7);
  20   1          batch(0);
  21   1      
  22   1          
  23   1      
  24   1          P0 = 0x01 << i;
  25   1          batch(6);
  26   1          batch(0);
  27   1      
  28   1          P0 = ~letter[seg_array[i]];
  29   1          if (point[i])
  30   1          {
  31   2              P0 = P0 & 0x7F;
  32   2          }
  33   1          batch(7);
  34   1          batch(0);
  35   1      
  36   1      
  37   1          i = (i + 1) % 8;
  38   1      }
  39          
  40          // 定义 clock_array 变量
  41          uchar clock_array[3] = {23, 59, 1};    // hour, minute, second
  42          
  43          uchar seg_clock()
  44          {
  45   1          clock_array[2]++;
  46   1      
  47   1          
  48   1          if (clock_array[2] == 60)
  49   1          {
  50   2              clock_array[2] = 0;
  51   2              clock_array[1]++;
  52   2      
  53   2              if (clock_array[1] == 60)
  54   2              {
C51 COMPILER V9.60.7.0   SEG                                                               03/09/2025 15:19:51 PAGE 2   

  55   3                  clock_array[1] = 0;
  56   3                  clock_array[0]++;
  57   3                  if (clock_array[0] == 24)
  58   3                  {
  59   4                      clock_array[0] = 0;
  60   4                  }
  61   3              }
  62   2          }
  63   1      
  64   1          seg_array[7] = clock_array[2] % 10;
  65   1          seg_array[6] = clock_array[2] / 10;
  66   1      
  67   1          seg_array[5] = 17;
  68   1          seg_array[4] = clock_array[1] % 10;
  69   1      
  70   1          seg_array[3] = clock_array[1] / 10;
  71   1          seg_array[2] = 17;
  72   1      
  73   1          seg_array[1] = clock_array[0] % 10;
  74   1          seg_array[0] = clock_array[0] / 10;
  75   1      
  76   1          if (clock_array[2] % 5 == 0)
  77   1          {
  78   2              return 1;
  79   2          }
  80   1          else
  81   1          {
  82   2              return 0;
  83   2          }
  84   1      
  85   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    183    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     63    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
