C51 COMPILER V9.60.7.0   IIC                                                               02/27/2025 19:44:14 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE iic.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\iic.l
                    -st) TABS(2) OBJECT(.\Objects\iic.obj)

line level    source

   1          #include "iic.h"
   2          
   3          sbit scl = P2 ^ 0;
   4          sbit sda = P2 ^ 1;
   5          
   6          
   7          
   8          //
   9          #define DELAY_TIME  5
  10          
  11          //
  12          static void I2C_Delay(unsigned char n)
  13          {
  14   1          do
  15   1          {
  16   2              _nop_();_nop_();_nop_();_nop_();_nop_();
  17   2              _nop_();_nop_();_nop_();_nop_();_nop_();
  18   2              _nop_();_nop_();_nop_();_nop_();_nop_();    
  19   2          }
  20   1          while(n--);       
  21   1      }
  22          
  23          //
  24          void I2CStart(void)
  25          {
  26   1          sda = 1;
  27   1          scl = 1;
  28   1        I2C_Delay(DELAY_TIME);
  29   1          sda = 0;
  30   1        I2C_Delay(DELAY_TIME);
  31   1          scl = 0;    
  32   1      }
  33          
  34          //
  35          void I2CStop(void)
  36          {
  37   1          sda = 0;
  38   1          scl = 1;
  39   1        I2C_Delay(DELAY_TIME);
  40   1          sda = 1;
  41   1        I2C_Delay(DELAY_TIME);
  42   1      }
  43          
  44          //
  45          void I2CSendByte(unsigned char byt)
  46          {
  47   1          unsigned char i;
  48   1        
  49   1          for(i=0; i<8; i++){
  50   2              scl = 0;
  51   2          I2C_Delay(DELAY_TIME);
  52   2              if(byt & 0x80){
  53   3                  sda = 1;
  54   3              }
C51 COMPILER V9.60.7.0   IIC                                                               02/27/2025 19:44:14 PAGE 2   

  55   2              else{
  56   3                  sda = 0;
  57   3              }
  58   2          I2C_Delay(DELAY_TIME);
  59   2              scl = 1;
  60   2              byt <<= 1;
  61   2          I2C_Delay(DELAY_TIME);
  62   2          }
  63   1        
  64   1          scl = 0;  
  65   1      }
  66          
  67          //
  68          unsigned char I2CReceiveByte(void)
  69          {
  70   1        unsigned char da;
  71   1        unsigned char i;
  72   1        for(i=0;i<8;i++){   
  73   2          scl = 1;
  74   2          I2C_Delay(DELAY_TIME);
  75   2          da <<= 1;
  76   2          if(sda) 
  77   2            da |= 0x01;
  78   2          scl = 0;
  79   2          I2C_Delay(DELAY_TIME);
  80   2        }
  81   1        return da;    
  82   1      }
  83          
  84          //
  85          unsigned char I2CWaitAck(void)
  86          {
  87   1        unsigned char ackbit;
  88   1        
  89   1          scl = 1;
  90   1        I2C_Delay(DELAY_TIME);
  91   1          ackbit = sda; 
  92   1          scl = 0;
  93   1        I2C_Delay(DELAY_TIME);
  94   1        
  95   1        return ackbit;
  96   1      }
  97          
  98          //
  99          void I2CSendAck(unsigned char ackbit)
 100          {
 101   1          scl = 0;
 102   1          sda = ackbit; 
 103   1        I2C_Delay(DELAY_TIME);
 104   1          scl = 1;
 105   1        I2C_Delay(DELAY_TIME);
 106   1          scl = 0; 
 107   1        sda = 1;
 108   1        I2C_Delay(DELAY_TIME);
 109   1      }
 110          
 111          
 112          
 113          
 114          void at2402_read(uchar address)
 115          {
 116   1          uchar data_;
C51 COMPILER V9.60.7.0   IIC                                                               02/27/2025 19:44:14 PAGE 3   

 117   1      
 118   1          I2CStart();
 119   1      
 120   1          I2CSendByte(0xA0);
 121   1          I2CWaitAck();
 122   1      
 123   1          I2CSendByte(address);
 124   1          I2CWaitAck();
 125   1      
 126   1          I2CStart();
 127   1      
 128   1          I2CSendByte(0xA1);
 129   1          I2CWaitAck();
 130   1      
 131   1          data_ = I2CReceiveByte();
 132   1          I2CSendAck(1);
 133   1      
 134   1          I2CStop();
 135   1          Delay10us();
*** WARNING C206 IN LINE 135 OF iic.c: 'Delay10us': missing function-prototype
 136   1      }
 137          
 138          uchar at2402_wirte(uchar address,uchar data_)
 139          {
 140   1          I2CStart();
 141   1      
 142   1          I2CSendByte(0xA0);
 143   1          I2CWaitAck();
 144   1      
 145   1          I2CSendByte(address);
 146   1          I2CWaitAck();
 147   1      
 148   1          I2CSendByte(data_);
 149   1          I2CWaitAck();
 150   1      
 151   1          I2CStop();
 152   1          I2CDelay10us();
*** WARNING C206 IN LINE 152 OF iic.c: 'I2CDelay10us': missing function-prototype
 153   1      }
*** WARNING C173 IN LINE 153 OF iic.c: missing return-expression
 154          
 155          
 156          //0-255 0x00 0xff
 157          void AT24C02_Write(uchar *dat,uchar addr,uchar num)    //1.数据 2.地址 3.多少个数据
 158          {
 159   1        I2CStart();
 160   1      
 161   1        I2CSendByte(0xa0);
 162   1        I2CWaitAck();
 163   1      
 164   1        I2CSendByte(addr);
 165   1        I2CWaitAck();
 166   1      
 167   1        while(num--)
 168   1        {
 169   2          I2CSendByte(*dat++);
 170   2          I2CWaitAck();
 171   2      
 172   2          I2C_Delay(200);
 173   2        }
 174   1        I2CStop();
 175   1        Delay5ms();
C51 COMPILER V9.60.7.0   IIC                                                               02/27/2025 19:44:14 PAGE 4   

*** WARNING C206 IN LINE 175 OF iic.c: 'Delay5ms': missing function-prototype
 176   1      }
 177          
 178          void AT24C02_Read(uchar *dat,uchar addr,uchar num)
 179          {
 180   1        I2CStart();
 181   1      
 182   1        I2CSendByte(0xa0);
 183   1        I2CWaitAck();
 184   1      
 185   1        I2CSendByte(addr);
 186   1        I2CWaitAck();
 187   1        
 188   1        I2CStart();
 189   1      
 190   1        I2CSendByte(0xa1);
 191   1        I2CWaitAck();
 192   1      
 193   1        while(num--)
 194   1        {
 195   2          *dat++=I2CReceiveByte();
 196   2          if(num)
 197   2                  I2CSendAck(0);
 198   2          else 
 199   2                  I2CSendAck(1);
 200   2        }
 201   1        I2CStop();
 202   1      }
 203          
 204          uchar pcf8591_ADC(uchar channel)
 205          {
 206   1          uchar adc;
 207   1      
 208   1          I2CStart();
 209   1      
 210   1          I2CSendByte(0x90);
 211   1          I2CWaitAck();
 212   1      
 213   1          I2CSendByte(channel);
 214   1          I2CWaitAck();
 215   1      
 216   1          I2CStart();
 217   1      
 218   1          I2CSendByte(0x91);
 219   1          I2CWaitAck();
 220   1      
 221   1          adc = I2CReceiveByte();
 222   1          I2CSendAck(1);
 223   1      
 224   1          I2CStop();
 225   1      
 226   1          return adc;
 227   1      }
 228          
 229          void pcf8591_DA(uchar v)
 230          {
 231   1          I2CStart();
 232   1      
 233   1          I2CSendByte(0x91);
 234   1          I2CWaitAck();
 235   1      
 236   1          I2CSendByte(0x40);
C51 COMPILER V9.60.7.0   IIC                                                               02/27/2025 19:44:14 PAGE 5   

 237   1          I2CWaitAck();
 238   1      
 239   1          I2CSendByte(v);
 240   1          I2CWaitAck();
 241   1      
 242   1          I2CStop();
 243   1      
 244   1      }
*** WARNING C290 IN LINE 153 OF iic.c: missing return value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    415    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  5 WARNING(S),  0 ERROR(S)
